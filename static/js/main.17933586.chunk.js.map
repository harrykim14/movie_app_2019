{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","medium_cover_image","genres","className","src","alt","map","genre","index","key","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TA6BeA,MAzBf,YAAmE,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,mBAAoBC,EAAQ,EAARA,OACtD,OACI,yBAAKC,UAAW,SAEZ,yBAAKC,IAAMH,EAAoBI,IAAKN,EAAOA,MAASA,IACpD,yBAAKI,UAAW,eACZ,wBAAIA,UAAY,gBAAgBJ,GAChC,wBAAII,UAAY,eAAeL,GAC/B,wBAAIK,UAAW,iBAAiBD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIL,UAAU,gBAAgBM,IAAMD,GAAQD,OAEzG,uBAAGJ,UAAW,kBAAkBH,MCwCjCU,G,kNA9CbC,MAAQ,CACNC,WAAY,EACZC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGGJ,EAHH,EAERK,KACEA,KAASL,OAGb,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IACnCQ,QAAQC,IAAI,CAAER,WAPJ,2C,kEAWVS,KAAKR,c,+BAGE,IAAD,EACqBQ,KAAKX,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OACA,6BAASV,UAAW,aAChBS,EACC,yBAAKT,UAAW,UACd,0BAAMA,UAAW,gBAAjB,eAGA,yBAAKA,UAAY,UACfU,EAAOP,KAAI,SAAAiB,GAAK,OAChB,kBAAC,EAAD,CACEd,IAAKc,EAAMC,GACXvB,mBAAqBsB,EAAMtB,mBAC3BuB,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfE,OAAQqB,EAAMrB,kB,GAtCVuB,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.17933586.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, medium_cover_image, genres}){\r\n    return (\r\n        <div className =\"movie\">\r\n            \r\n            <img src ={medium_cover_image} alt={title} title = {title}/>\r\n            <div className =\"movie__data\">\r\n                <h3 className = \"movie__title\">{title}</h3>\r\n                <h5 className = \"movie__year\">{year}</h5>\r\n                <ul className =\"movie__genres\">{genres.map((genre, index) => <li className=\"genres__genre\" key ={index}>{genre}</li>)\r\n                }</ul> \r\n                <p className =\"movie__summary\">{summary}</p>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nMovie.propTypes ={\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    medium_cover_image : PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from './Movie';\r\nimport \"./App.css\";\r\n\r\n// constructor()는 웹사이트에 표시되기 전에 실행됨\r\nclass App extends React.Component{\r\n    \r\n  state = {\r\n    isLoading : true,\r\n    movies: []\r\n  };\r\n  getMovies = async() => {\r\n    const { \r\n      data : { \r\n        data : { movies }\r\n      }\r\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({ movies, isLoading: false });\r\n    console.log({ movies })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render(){\r\n   const {isLoading, movies} = this.state;\r\n   return (\r\n   <section className =\"container\">\r\n      {isLoading ? (\r\n        <div className =\"loader\">\r\n          <span className =\"loader__text\">Loading...</span>\r\n        </div>\r\n        ) : (\r\n          <div className = \"movies\">\r\n           {movies.map(movie =>(\r\n            <Movie \r\n              key={movie.id} \r\n              medium_cover_image= {movie.medium_cover_image} \r\n              id={movie.id} \r\n              year={movie.year} \r\n              title={movie.title} \r\n              summary={movie.summary} \r\n              genres={movie.genres}\r\n            />\r\n        ))}\r\n          </div>\r\n      )} \r\n      </section>);\r\n      }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// React Application은 단 하나의 컴포넌트만 렌더링 할 수 있다"],"sourceRoot":""}
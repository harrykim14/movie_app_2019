{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","medium_cover_image","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TA6BeA,MAzBf,YAAmE,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,mBAAoBC,EAAQ,EAARA,OACtD,OACI,yBAAKC,UAAW,SAEZ,yBAAKC,IAAMH,EAAoBI,IAAKN,EAAOA,MAASA,IACpD,yBAAKI,UAAW,eACZ,wBAAIA,UAAY,gBAAgBJ,GAChC,wBAAII,UAAY,eAAeL,GAC/B,wBAAIK,UAAW,iBAAiBD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIL,UAAU,gBAAgBM,IAAMD,GAAQD,OAEzG,uBAAGJ,UAAW,kBAAkBH,EAAQU,MAAM,EAAE,KAAhD,UCwCDC,G,kNA9CbC,MAAQ,CACNC,WAAY,EACZC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGGJ,EAHH,EAERK,KACEA,KAASL,OAGb,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IACnCQ,QAAQC,IAAI,CAAER,WAPJ,2C,kEAWVS,KAAKR,c,+BAGE,IAAD,EACqBQ,KAAKX,MAA1BC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OACA,6BAASX,UAAW,aAChBU,EACC,yBAAKV,UAAW,UACd,0BAAMA,UAAW,gBAAjB,eAGA,yBAAKA,UAAY,UACfW,EAAOR,KAAI,SAAAkB,GAAK,OAChB,kBAAC,EAAD,CACEf,IAAKe,EAAMC,GACXxB,mBAAqBuB,EAAMvB,mBAC3BwB,GAAID,EAAMC,GACV3B,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfE,OAAQsB,EAAMtB,kB,GAtCVwB,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.07b15e0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, medium_cover_image, genres}){\r\n    return (\r\n        <div className =\"movie\">\r\n            \r\n            <img src ={medium_cover_image} alt={title} title = {title}/>\r\n            <div className =\"movie__data\">\r\n                <h3 className = \"movie__title\">{title}</h3>\r\n                <h5 className = \"movie__year\">{year}</h5>\r\n                <ul className =\"movie__genres\">{genres.map((genre, index) => <li className=\"genres__genre\" key ={index}>{genre}</li>)\r\n                }</ul> \r\n                <p className =\"movie__summary\">{summary.slice(0,180)}...</p>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nMovie.propTypes ={\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    medium_cover_image : PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport \"./App.css\";\n\n// constructor()는 웹사이트에 표시되기 전에 실행됨\nclass App extends React.Component{\n    \n  state = {\n    isLoading : true,\n    movies: []\n  };\n  getMovies = async() => {\n    const { \n      data : { \n        data : { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false });\n    console.log({ movies })\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render(){\n   const {isLoading, movies} = this.state;\n   return (\n   <section className =\"container\">\n      {isLoading ? (\n        <div className =\"loader\">\n          <span className =\"loader__text\">Loading...</span>\n        </div>\n        ) : (\n          <div className = \"movies\">\n           {movies.map(movie =>(\n            <Movie \n              key={movie.id} \n              medium_cover_image= {movie.medium_cover_image} \n              id={movie.id} \n              year={movie.year} \n              title={movie.title} \n              summary={movie.summary} \n              genres={movie.genres}\n            />\n        ))}\n          </div>\n      )} \n      </section>);\n      }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// React Application은 단 하나의 컴포넌트만 렌더링 할 수 있다"],"sourceRoot":""}